//*****************************************************************************
//*****************************************************************************
//  FILENAME:  DUALADC_1.h
//  Version: 2.30, Updated on 2015/3/4 at 22:26:9
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: DualADC User Module C Language interface file.
//
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
//
#ifndef DUALADC_1_INCLUDE
#define DUALADC_1_INCLUDE

#include <m8C.h>

//-------------------------------------------------
// Defines for DUALADC_1 API's.
//-------------------------------------------------

// Power Setting Constants
#define DUALADC_1_OFF            0
#define DUALADC_1_LOWPOWER       1
#define DUALADC_1_MEDPOWER       2
#define DUALADC_1_HIGHPOWER      3

// Function fastcall16 Pragmas
#pragma fastcall16 DUALADC_1_Start
#pragma fastcall16 DUALADC_1_SetPower
#pragma fastcall16 DUALADC_1_GetSamples
#pragma fastcall16 DUALADC_1_StopAD
#pragma fastcall16 DUALADC_1_Stop
#pragma fastcall16 DUALADC_1_fIsData
#pragma fastcall16 DUALADC_1_fIsDataAvailable
#pragma fastcall16 DUALADC_1_iGetData1
#pragma fastcall16 DUALADC_1_iGetData1ClearFlag
#pragma fastcall16 DUALADC_1_iGetData2
#pragma fastcall16 DUALADC_1_iGetData2ClearFlag
#pragma fastcall16 DUALADC_1_ClearFlag
#pragma fastcall16 DUALADC_1_SetResolution

//-------------------------------------------------
// Prototypes of the DUALADC_1 API.
//-------------------------------------------------
extern void DUALADC_1_Start(BYTE bPower);
extern void DUALADC_1_SetPower(BYTE bPower);
extern void DUALADC_1_GetSamples(BYTE bNumSamples);
extern void DUALADC_1_StopAD(void);
extern void DUALADC_1_Stop(void);
extern CHAR DUALADC_1_fIsData(void);
extern CHAR DUALADC_1_fIsDataAvailable(void);
extern INT  DUALADC_1_iGetData1(void);
extern INT  DUALADC_1_iGetData2(void);
extern INT  DUALADC_1_iGetData1ClearFlag(void);
extern INT  DUALADC_1_iGetData2ClearFlag(void);
extern void DUALADC_1_ClearFlag(void);

extern void DUALADC_1_SetResolution(BYTE bResolution);

#define DUALADC_1_bNUMBITS  0x07

//-------------------------------------------------
// Hardware Register Definitions
//-------------------------------------------------

// ADC1 Integrator Block Register Definitions
#pragma ioport  DUALADC_1_bfADC1cr0:    0x090
BYTE            DUALADC_1_bfADC1cr0;
#pragma ioport  DUALADC_1_bfADC1cr1:    0x091
BYTE            DUALADC_1_bfADC1cr1;
#pragma ioport  DUALADC_1_bfADC1cr2:    0x092
BYTE            DUALADC_1_bfADC1cr2;
#pragma ioport  DUALADC_1_bfADC1cr3:    0x093
BYTE            DUALADC_1_bfADC1cr3;

// ADC2 Integrator Block Register Definitions
#pragma ioport  DUALADC_1_bfADC2cr0:    0x098
BYTE            DUALADC_1_bfADC2cr0;
#pragma ioport  DUALADC_1_bfADC2cr1:    0x099
BYTE            DUALADC_1_bfADC2cr1;
#pragma ioport  DUALADC_1_bfADC2cr2:    0x09a
BYTE            DUALADC_1_bfADC2cr2;
#pragma ioport  DUALADC_1_bfADC2cr3:    0x09b
BYTE            DUALADC_1_bfADC2cr3;

// Counter Block Register Definitions
#pragma ioport  DUALADC_1_fCounter1FN:  0x120
BYTE            DUALADC_1_fCounter1FN;
#pragma ioport  DUALADC_1_fCounter1SL:  0x121
BYTE            DUALADC_1_fCounter1SL;
#pragma ioport  DUALADC_1_fCounter1OS:  0x122
BYTE            DUALADC_1_fCounter1OS;
#pragma ioport  DUALADC_1_bCount1:  0x020
BYTE            DUALADC_1_bCount1;
#pragma ioport  DUALADC_1_bPeriod1: 0x021
BYTE            DUALADC_1_bPeriod1;
#pragma ioport  DUALADC_1_bCompare1:    0x022
BYTE            DUALADC_1_bCompare1;
#pragma ioport  DUALADC_1_bCounter1_CR0:    0x023
BYTE            DUALADC_1_bCounter1_CR0;

// Counter Block Register Definitions
#pragma ioport  DUALADC_1_fCounter2FN:  0x12c
BYTE            DUALADC_1_fCounter2FN;
#pragma ioport  DUALADC_1_fCounter2SL:  0x12d
BYTE            DUALADC_1_fCounter2SL;
#pragma ioport  DUALADC_1_fCounter2OS:  0x12e
BYTE            DUALADC_1_fCounter2OS;
#pragma ioport  DUALADC_1_bCount2:  0x02c
BYTE            DUALADC_1_bCount2;
#pragma ioport  DUALADC_1_bPeriod2: 0x02d
BYTE            DUALADC_1_bPeriod2;
#pragma ioport  DUALADC_1_bCompare2:    0x02e
BYTE            DUALADC_1_bCompare2;
#pragma ioport  DUALADC_1_bCounter2_CR0:    0x02f
BYTE            DUALADC_1_bCounter2_CR0;

// PWM16 Block Register Definitions
#pragma ioport  DUALADC_1_bfPWM_LSB_FN: 0x124
BYTE            DUALADC_1_bfPWM_LSB_FN;
#pragma ioport  DUALADC_1_bfPWM_MSB_FN: 0x128
BYTE            DUALADC_1_bfPWM_MSB_FN;
#pragma ioport  DUALADC_1_fPWM_LSB_CR0: 0x027
BYTE            DUALADC_1_fPWM_LSB_CR0;
#pragma ioport  DUALADC_1_fPWM_MSB_CR0: 0x02b
BYTE            DUALADC_1_fPWM_MSB_CR0;
#pragma ioport  DUALADC_1_bPWM_Count_MSB:   0x028
BYTE            DUALADC_1_bPWM_Count_MSB;
#pragma ioport  DUALADC_1_bPWM_Count_LSB:   0x024
BYTE            DUALADC_1_bPWM_Count_LSB;
#pragma ioport  DUALADC_1_bPWM_Period_MSB:  0x029
BYTE            DUALADC_1_bPWM_Period_MSB;
#pragma ioport  DUALADC_1_bPWM_Period_LSB:  0x025
BYTE            DUALADC_1_bPWM_Period_LSB;
#pragma ioport  DUALADC_1_bPWM_IntTime_MSB: 0x02a
BYTE            DUALADC_1_bPWM_IntTime_MSB;
#pragma ioport  DUALADC_1_bPWM_IntTime_LSB: 0x026
BYTE            DUALADC_1_bPWM_IntTime_LSB;
#pragma ioport  DUALADC_1_bfPWM_LSB_FN: 0x124
BYTE            DUALADC_1_bfPWM_LSB_FN;
#pragma ioport  DUALADC_1_bfPWM_MSB_FN: 0x128
BYTE            DUALADC_1_bfPWM_MSB_FN;

#endif
// end of file DUALADC_1.h
