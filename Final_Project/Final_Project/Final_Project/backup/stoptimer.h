//*****************************************************************************
//*****************************************************************************
//  FILENAME: StopTimer.h
//   Version: 2.6, Updated on 2015/3/4 at 22:27:47
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: Timer16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef StopTimer_INCLUDE
#define StopTimer_INCLUDE

#include <m8c.h>

#pragma fastcall16 StopTimer_EnableInt
#pragma fastcall16 StopTimer_DisableInt
#pragma fastcall16 StopTimer_Start
#pragma fastcall16 StopTimer_Stop
#pragma fastcall16 StopTimer_wReadTimer                // Read  DR0
#pragma fastcall16 StopTimer_wReadTimerSaveCV          // Read  DR0      
#pragma fastcall16 StopTimer_WritePeriod               // Write DR1
#pragma fastcall16 StopTimer_wReadCompareValue         // Read  DR2
#pragma fastcall16 StopTimer_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wStopTimer_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 wStopTimer_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 wStopTimer_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 wStopTimer_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 wStopTimer_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the StopTimer API.
//-------------------------------------------------

extern void StopTimer_EnableInt(void);                           // Proxy 1
extern void StopTimer_DisableInt(void);                          // Proxy 1
extern void StopTimer_Start(void);                               // Proxy 1
extern void StopTimer_Stop(void);                                // Proxy 1
extern WORD StopTimer_wReadTimer(void);                          // Proxy 1
extern WORD StopTimer_wReadTimerSaveCV(void);                    // Proxy 2
extern void StopTimer_WritePeriod(WORD wPeriod);                 // Proxy 1
extern WORD StopTimer_wReadCompareValue(void);                   // Proxy 1
extern void StopTimer_WriteCompareValue(WORD wCompareValue);     // Proxy 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wStopTimer_ReadCompareValue(void);       // Deprecated
extern WORD wStopTimer_ReadTimerSaveCV(void);        // Deprecated
extern WORD wStopTimer_ReadCounter(void);            // Obsolete
extern WORD wStopTimer_ReadTimer(void);              // Deprecated
extern WORD wStopTimer_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for StopTimer API's.
//--------------------------------------------------

#define StopTimer_CONTROL_REG_START_BIT        ( 0x01 )
#define StopTimer_INT_REG_ADDR                 ( 0x0e1 )
#define StopTimer_INT_MASK                     ( 0x20 )


//--------------------------------------------------
// Constants for StopTimer user defined values
//--------------------------------------------------

#define StopTimer_PERIOD                       ( 0xc80 )
#define StopTimer_COMPARE_VALUE                ( 0x3e8 )


//-------------------------------------------------
// Register Addresses for StopTimer
//-------------------------------------------------

#pragma ioport  StopTimer_COUNTER_LSB_REG:  0x030          //Count register LSB
BYTE            StopTimer_COUNTER_LSB_REG;
#pragma ioport  StopTimer_COUNTER_MSB_REG:  0x034          //Count register MSB
BYTE            StopTimer_COUNTER_MSB_REG;
#pragma ioport  StopTimer_PERIOD_LSB_REG:   0x031          //Period register LSB
BYTE            StopTimer_PERIOD_LSB_REG;
#pragma ioport  StopTimer_PERIOD_MSB_REG:   0x035          //Period register MSB
BYTE            StopTimer_PERIOD_MSB_REG;
#pragma ioport  StopTimer_COMPARE_LSB_REG:  0x032          //Compare register LSB
BYTE            StopTimer_COMPARE_LSB_REG;
#pragma ioport  StopTimer_COMPARE_MSB_REG:  0x036          //Compare register MSB
BYTE            StopTimer_COMPARE_MSB_REG;
#pragma ioport  StopTimer_CONTROL_LSB_REG:  0x033          //Control register LSB
BYTE            StopTimer_CONTROL_LSB_REG;
#pragma ioport  StopTimer_CONTROL_MSB_REG:  0x037          //Control register MSB
BYTE            StopTimer_CONTROL_MSB_REG;
#pragma ioport  StopTimer_FUNC_LSB_REG: 0x130              //Function register LSB
BYTE            StopTimer_FUNC_LSB_REG;
#pragma ioport  StopTimer_FUNC_MSB_REG: 0x134              //Function register MSB
BYTE            StopTimer_FUNC_MSB_REG;
#pragma ioport  StopTimer_INPUT_LSB_REG:    0x131          //Input register LSB
BYTE            StopTimer_INPUT_LSB_REG;
#pragma ioport  StopTimer_INPUT_MSB_REG:    0x135          //Input register MSB
BYTE            StopTimer_INPUT_MSB_REG;
#pragma ioport  StopTimer_OUTPUT_LSB_REG:   0x132          //Output register LSB
BYTE            StopTimer_OUTPUT_LSB_REG;
#pragma ioport  StopTimer_OUTPUT_MSB_REG:   0x136          //Output register MSB
BYTE            StopTimer_OUTPUT_MSB_REG;
#pragma ioport  StopTimer_INT_REG:       0x0e1             //Interrupt Mask Register
BYTE            StopTimer_INT_REG;


//-------------------------------------------------
// StopTimer Macro 'Functions'
//-------------------------------------------------

#define StopTimer_Start_M \
   ( StopTimer_CONTROL_LSB_REG |=  StopTimer_CONTROL_REG_START_BIT )

#define StopTimer_Stop_M  \
   ( StopTimer_CONTROL_LSB_REG &= ~StopTimer_CONTROL_REG_START_BIT )

#define StopTimer_EnableInt_M   \
   M8C_EnableIntMask(  StopTimer_INT_REG, StopTimer_INT_MASK )

#define StopTimer_DisableInt_M  \
   M8C_DisableIntMask( StopTimer_INT_REG, StopTimer_INT_MASK )

#endif
// end of file StopTimer.h
